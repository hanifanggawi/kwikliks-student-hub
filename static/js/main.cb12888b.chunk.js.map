{"version":3,"sources":["static/img/kwikliks.svg","components/Navbar.js","components/forms/EditTask.js","components/Task.js","components/forms/EditLink.js","components/QuickLink.js","components/forms/AddTask.js","components/forms/AddLink.js","components/forms/EditCourse.js","components/TableRow.js","components/forms/AddCourse.js","components/Alert.js","components/Table.js","static/img/jadwalsms4.png","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","src","logo","alt","href","EditTask","task","updateTask","closeEdit","useState","title","text","setText","onSubmit","e","preventDefault","editedTask","style","color","cursor","type","id","course_id","autoFocus","placeholder","value","onChange","target","onClick","Task","deleteTask","completed","checked","setChecked","duedate","Date","parse","dueDate","setDueDate","calenderOpened","setCalenderOpened","showButtons","setShowButtons","editingMode","setEditingMode","onMouseOver","onMouseLeave","defaultChecked","checkedTask","checkTask","htmlFor","visibility","selected","date","updatedTask","toJSON","updateDueDate","customInput","size","onCalendarOpen","onCalendarClose","dateValues","toDateString","split","dateFormat","EditLink","link","updateLink","closeForm","setTitle","url","setUrl","newLink","QuickLink","deleteLink","showForm","setShowForm","rel","AddTask","toggle","addTask","AddLink","setShowLinkForm","link_type","addLink","EditCourse","editCourse","course","description","setDescription","editedCourse","TableRow","deleteCourse","updateCourse","tasks","setTasks","links","setLinks","showAddTask","setShowAddTask","showEdit","setShowEdit","showLinkForm","selectedLinkType","setSelectedLinkType","showCourseForm","setShowCourseForm","linkCounter","setLinkCounter","taskCounter","setTaskCounter","a","newTask","map","filter","console","log","linkType","length","filtered_link","openForm","AddCourse","addCourse","required","Alert","closeAlert","Table","courses","setCourses","courseCounter","setCourseCounter","showAddCourse","setShowAddCourse","showAlert","setShowAlert","newCourse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb12888b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kwikliks.af7b82c0.svg\";","import logo from '../static/img/kwikliks.svg'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"nav-brand\">\r\n                <img src={logo} className=\"logo\" alt=\"[]\"/>\r\n                <a href='#' className=\"logotype\"> KwiKliks </a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { useState } from 'react'\r\nimport { FaCheck, FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst EditTask = ({task, updateTask, closeEdit}) => {\r\n    const [text, setText] = useState(task.title)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const editedTask = {...task, title : text}\r\n        updateTask(editedTask)\r\n        closeEdit()\r\n    }\r\n\r\n    const style = { color: \"#217DE7\", cursor: \"pointer\" }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"task-form\" onSubmit={onSubmit}>\r\n                <input type=\"checkbox\" className=\"checkbox\"/>\r\n                <input \r\n                    id = {`add-${task.course_id}`}\r\n                    autoFocus=\"autofocus\"\r\n                    className=\"task-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"New Task\"\r\n                    value={text} onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <FaCheck style={style} onClick={onSubmit} />\r\n                <FaTimes style={style} onClick={closeEdit} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTask\r\n","import { MdEdit, MdDelete } from 'react-icons/md'\r\nimport { FaCalendar } from 'react-icons/fa'\r\nimport { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport EditTask from './forms/EditTask'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Task = ({ task, course_id, updateTask, deleteTask}) => {\r\n    const [checked, setChecked] = useState(task.completed);\r\n    const [dueDate, setDueDate] = useState(task.duedate && new Date(Date.parse(task.duedate)))\r\n    const [calenderOpened, setCalenderOpened] = useState(false)\r\n    const [showButtons, setShowButtons] = useState(false)\r\n    const [editingMode, setEditingMode] = useState(false)\r\n\r\n    const checkTask = (task) => {\r\n        const checkedTask = {...task, completed : !task.completed}\r\n        setChecked(!checked)\r\n        updateTask(checkedTask)\r\n    }\r\n\r\n    const updateDueDate = (date) => {\r\n        const updatedTask = {...task, duedate: date.toJSON()}\r\n        setDueDate(date)\r\n        updateTask(updatedTask)\r\n    }\r\n\r\n    const dateFormat = (date) => {\r\n        const dateValues = date.toDateString().split(\" \")\r\n        const dayStr = dateValues[0]\r\n        const month = dateValues[1]\r\n        const day = dateValues[2]\r\n        return dayStr + \", \" + month + \" \" + day\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        {editingMode ?  \r\n            <EditTask task={task} updateTask={updateTask} closeEdit={() => setEditingMode(false)}/> \r\n            :\r\n        <div className=\"task\" \r\n            onMouseOver={() => { setShowButtons(true) }} \r\n            onMouseLeave={() => { setShowButtons(calenderOpened) }}\r\n            > \r\n                <span className=\"task-group\">\r\n                    <span className=\"checkbox-wrapper\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"checkbox\"\r\n                            id={`check-${course_id}-${task.id}`}\r\n                            defaultChecked={checked}\r\n                            onChange={() => checkTask(task)}\r\n                        />\r\n                        <label htmlFor={`check-${course_id}-${task.id}`} className=\"checkbox-label\">\r\n                            {task.title}\r\n                        </label>\r\n\r\n                    </span>\r\n                    <span id={`task-button-${course_id}-${task.id}`} className=\"task-buttons\" style={{ visibility: (showButtons) ? 'visible' : 'hidden' }}>\r\n                        <MdEdit onClick={(() => setEditingMode(true))}/>\r\n                        <MdDelete onClick={() => deleteTask(task.id)}/>\r\n                        \r\n                        <DatePicker \r\n                            selected={dueDate} \r\n                            onChange={date => updateDueDate(date)} \r\n                            customInput={<FaCalendar size= {12}/>}\r\n                            onCalendarOpen={() => setCalenderOpened(true)}\r\n                            onCalendarClose={() => {setCalenderOpened(false); setShowButtons(false)}}\r\n                        />\r\n                    </span>\r\n                </span>\r\n                \r\n                <span className=\"task-duedate\">\r\n                    {dueDate && dateFormat(dueDate)}\r\n                </span>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { useState } from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst EditLink = ({link, updateLink, closeForm}) => {\r\n    const [title, setTitle] = useState(link.title)\r\n    const [url, setUrl] = useState(link.url === '#' ? '' : link.url)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newLink = {...link, title : title, url :(!!url) ? url : '#'}\r\n        updateLink(newLink)\r\n        closeForm()\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-box\">\r\n                <form className=\"link-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-header\">\r\n                        <h2 className=\"form-title\">Update Link</h2>\r\n                        <FaTimes className=\"close-button\" onClick={closeForm}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Link Title</div>\r\n                        <input className=\"form-input\" type=\"text\" placeholder=\"Link Title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Link URL</div>\r\n                        <input className=\"form-input\" type=\"url\" placeholder=\"Link URL\" value={url} onChange={(e) => setUrl(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"button-fill\">Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditLink\r\n","import { useState } from 'react'\r\nimport { MdEdit, MdDelete} from 'react-icons/md'\r\nimport EditLink from './forms/EditLink'\r\n\r\nconst QuickLink = ({link, editingMode, deleteLink, updateLink}) => {\r\n    const [showForm, setShowForm] = useState(false)\r\n\r\n    return (\r\n        <div className=\"link\">\r\n            <a \r\n                className={(editingMode) ? \"link-a\" : \"link-a\"} \r\n                href={`${(editingMode) ? null : link.url}`}\r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                    {link.title}\r\n            </a>\r\n            {editingMode &&\r\n                <div className=\"task-buttons\">\r\n                    <MdEdit onClick={() => setShowForm(true)}/>\r\n                    <MdDelete onClick={() => deleteLink(link.id)}/>\r\n                </div>                           \r\n            }\r\n            {showForm && \r\n                <EditLink\r\n                    link={link}\r\n                    updateLink={updateLink} \r\n                    closeForm={() => setShowForm(false)}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuickLink\r\n","import { useState } from 'react'\r\nimport { FaCheck, FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst AddTask = ({toggle, addTask, course_id}) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(text)\r\n        toggle()\r\n    }\r\n\r\n    const style = { color: \"#217DE7\", cursor: \"pointer\" }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"task-form\" onSubmit={onSubmit}>\r\n                <input type=\"checkbox\" className=\"checkbox\"/>\r\n                <input \r\n                    id = {`add-${course_id}`}\r\n                    autoFocus=\"autofocus\"\r\n                    className=\"task-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"New Task\"\r\n                    value={text} onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <FaCheck onClick={onSubmit} style={style} />\r\n                <FaTimes style={style} onClick={toggle} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst AddLink = ({setShowLinkForm, link_type, addLink}) => {\r\n    const [title, setTitle] = useState()\r\n    const [url, setUrl] = useState()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        addLink(title, ((!!url) ? url : '#'), link_type)\r\n        setShowLinkForm(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-box\">\r\n                <form className=\"link-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-header\">\r\n                        <h2 className=\"form-title\">New Link</h2>\r\n                        <FaTimes className=\"close-button\" onClick={() => setShowLinkForm(false)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Link Title</div>\r\n                        <input className=\"form-input\" type=\"text\" placeholder=\"Link Title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Link URL</div>\r\n                        <input className=\"form-input\" type=\"url\" placeholder=\"Link URL\" value={url} onChange={(e) => setUrl(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"button-fill\">Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddLink\r\n","import { useState } from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst EditCourse = ({closeForm, editCourse, course}) => {\r\n    const [title, setTitle] = useState(course.title)\r\n    const [description, setDescription] = useState(course.description)\r\n    const [url, setUrl] = useState(course.url === '#' ? '' : course.url)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const editedCourse = {id: course.id, title : title, description : description, url : (!!url) ? url : '#'}\r\n        editCourse(editedCourse)\r\n        closeForm()\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-box\">\r\n                <form className=\"link-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-header\">\r\n                        <h2 className=\"form-title\">Edit Course</h2>\r\n                        <FaTimes className=\"close-button\" onClick={closeForm}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course Title</div>\r\n                        <input className=\"form-input\" type=\"text\" placeholder=\"Course Title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course Description</div>\r\n                        <input className=\"form-input\" type=\"text\" placeholder=\"Course Description\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course URL (Optional)</div>\r\n                        <input className=\"form-input\" type=\"url\" placeholder=\"Course URL\" value={url} onChange={(e) => setUrl(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"button-fill\">Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCourse\r\n","import Task from './Task'\r\nimport QuickLink from './QuickLink'\r\nimport AddTask from './forms/AddTask'\r\nimport AddLink from './forms/AddLink'\r\nimport EditCourse from './forms/EditCourse'\r\nimport getCookie from '../util/getCookie'\r\nimport {useState, useEffect} from 'react'\r\nimport { MdEdit, MdDelete} from 'react-icons/md'\r\nimport { FaPlus } from 'react-icons/fa'\r\n\r\nconst TableRow = ({course, deleteCourse, updateCourse}) => {\r\n    const [tasks, setTasks] = useState([])\r\n    const [links, setLinks] = useState([])\r\n    const [showAddTask, setShowAddTask] = useState(true)\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [editingMode, setEditingMode] = useState(false)\r\n    const [showLinkForm, setShowLinkForm] = useState(false)\r\n    const [selectedLinkType, setSelectedLinkType] = useState()\r\n    const [showCourseForm, setShowCourseForm] = useState(false)\r\n    const [linkCounter, setLinkCounter] = useState(0)\r\n    const [taskCounter, setTaskCounter] = useState(0)\r\n    \r\n    const linkTypes = ['M', 'A']\r\n\r\n    const generateLinkId = () => {\r\n        setLinkCounter(linkCounter +1)\r\n        return linkCounter\r\n    }\r\n\r\n    const generateTaskId = () => {\r\n        setTaskCounter(taskCounter +1)\r\n        return taskCounter\r\n    }\r\n\r\n    // useEffect(() => {\r\n\r\n    //     const getTasks = async (course_id) => {\r\n    //       const tasksFromServer = await fetchTasks(course_id)\r\n    //       setTasks(tasksFromServer)\r\n    //     }\r\n\r\n    //     const getLinks = async (course_id) => {\r\n    //         const linksFromServer = await fetchLinks(course_id)\r\n    //         setLinks(linksFromServer)\r\n    //       }\r\n    //     getTasks(course.id)\r\n    //     getLinks(course.id)\r\n    //   }, [course])\r\n\r\n    const fetchTasks = async (course_id) => {\r\n        const res = await fetch(`http://localhost:8050/api/task-list/${course_id}`)\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n\r\n    const fetchLinks = async (course_id) => {\r\n        const res = await fetch(`http://localhost:8050/api/link-list/${course_id}`)\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n\r\n    const addTask = async (text) => {\r\n        const newTask = {id : generateTaskId() , title: text, course: course.id}\r\n        setTasks([...tasks, newTask])\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // const res = await fetch('http://localhost:8050/api/task-create/',{\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //       'Content-type': 'application/json',\r\n        //       'X-CSRFToken':csrftoken,\r\n        //     },\r\n        //     body: JSON.stringify(newtask),\r\n        //   })\r\n        // const data = await res.json()\r\n        // return data\r\n    }\r\n\r\n    const updateTask = async (updatedTask) => {\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // await fetch(`http://localhost:8050/api/task-update/${updatedTask.id}/`, {\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //       'Content-type': 'application/json',\r\n        //       'X-CSRFToken':csrftoken,\r\n        //     },\r\n        //     body: JSON.stringify(updatedTask),\r\n        //   })\r\n        setTasks(tasks.map((task) => (task.id === updatedTask.id) ? updatedTask : task))\r\n    }\r\n\r\n    const deleteTask = async (id) => {\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // await fetch(`http://localhost:8050/api/task-delete/${id}/`, { \r\n        //     method: 'DELETE',\r\n        //     headers: {'X-CSRFToken':csrftoken}\r\n        // })\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    const addLink = async (title, url, link_type) => {\r\n        const newLink = {id : generateLinkId() , title : title, url : url, course_id : course.id, link_type : link_type}\r\n        console.log(newLink)\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // const res = await fetch('http://localhost:8050/api/link-create/',{\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //       'Content-type': 'application/json',\r\n        //       'X-CSRFToken':csrftoken,\r\n        //     },\r\n        //     body: JSON.stringify(newLink),\r\n        //   })\r\n        // const data = await res.json()\r\n        setLinks([...links, newLink])\r\n        setEditingMode(false)\r\n        return newLink\r\n    }\r\n\r\n    const updateLink = async (newLink) => {\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // const res = await fetch(`http://localhost:8050/api/link-update/${newLink.id}/`,{\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //       'Content-type': 'application/json',\r\n        //       'X-CSRFToken':csrftoken,\r\n        //     },\r\n        //     body: JSON.stringify(newLink),\r\n        //   })\r\n        setLinks(links.map((link) => (link.id === newLink.id) ? newLink : link))\r\n        setEditingMode(false)\r\n        // const data = await res.json()\r\n        return newLink\r\n    }\r\n\r\n    const deleteLink = async (id) => {\r\n        // const csrftoken = getCookie('csrftoken')\r\n        // await fetch(`http://localhost:8050/api/link-delete/${id}/`, { \r\n        //     method: 'DELETE',\r\n        //     headers: {'X-CSRFToken':csrftoken}\r\n        // })\r\n        setLinks(links.filter((link) => link.id !== id))\r\n    }\r\n\r\n    const openForm = (selectedLinkType) => {\r\n        setSelectedLinkType(selectedLinkType)\r\n        setShowLinkForm(true)\r\n    }\r\n    \r\n    return (\r\n        <tr \r\n            className=\"table-row\"\r\n            onMouseOver= {() => setShowEdit(true)} \r\n            onMouseLeave= {() => setShowEdit(false)} \r\n        > \r\n        \r\n            <td>\r\n                <div className=\"activity-group\">\r\n                    <p><a href={course.url}>{course.title}</a></p>\r\n                    {editingMode &&\r\n                    <div className=\"task-buttons\">\r\n                        <MdEdit onClick={() => setShowCourseForm(true)}/>\r\n                    </div>                           \r\n                    }\r\n                    {showCourseForm && \r\n                        <EditCourse \r\n                            course={course} \r\n                            editCourse={updateCourse}\r\n                            closeForm={() => setShowCourseForm(false)} \r\n                        />\r\n                    }\r\n                </div>\r\n                <span>{course.description}</span>\r\n                <div className=\"course-buttons\">\r\n                    <MdEdit \r\n                        className={`edit-icon ${(editingMode) && 'active'}`} \r\n                        onClick={() => setEditingMode(!editingMode)} \r\n                        style={{visibility:(showEdit || editingMode) ? 'visible' : 'hidden'}} \r\n                        title = {(editingMode) ? 'Exit Edit Mode' : 'Edit Course'}\r\n                    />\r\n                    {editingMode && <MdDelete className='delete-icon' onClick={() => deleteCourse(course.id)} title=\"Delete Course\"/>}\r\n                </div>\r\n            </td>\r\n            \r\n            {linkTypes.map((linkType) => (\r\n                <td key={linkType}>\r\n                    {links.filter((link) => link.link_type === linkType).length > 0 ?\r\n                            links.filter((link) => link.link_type === linkType).map((filtered_link) => (\r\n                                <QuickLink \r\n                                    key={filtered_link.id} \r\n                                    link={filtered_link} \r\n                                    editingMode={editingMode} \r\n                                    deleteLink={deleteLink}\r\n                                    updateLink={updateLink}\r\n                                />\r\n                            ))\r\n                            :\r\n                            (!editingMode) ? <p>-</p> : ''\r\n                    }\r\n                {editingMode && \r\n                    <div className=\"task-add\" onClick={() => openForm(linkType)}>\r\n                        <FaPlus className=\"task-add-icon\"/>\r\n                        <span>New Link</span>\r\n                    </div>\r\n                }\r\n                {showLinkForm && \r\n                    <AddLink \r\n                        setShowLinkForm={setShowLinkForm} \r\n                        link_type={selectedLinkType} \r\n                        addLink ={addLink}\r\n                    />\r\n                }\r\n                </td>\r\n            ))}\r\n\r\n            <td >\r\n            {tasks.map((task) => (\r\n                <Task \r\n                    task ={task} \r\n                    course_id={course.id} \r\n                    updateTask={updateTask}\r\n                    deleteTask = {deleteTask}\r\n                    key={task.id}\r\n                />\r\n            ))}\r\n            {showAddTask ? \r\n                <div className=\"task-add\" onClick={() => setShowAddTask(!showAddTask)}>\r\n                    <FaPlus className=\"task-add-icon\"/>\r\n                    <span>New Task</span>\r\n                </div>\r\n                 :\r\n                 <AddTask \r\n                    course_id={course.id} toggle={() => setShowAddTask(!showAddTask)} addTask={addTask} />\r\n            }\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n","import { useState } from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst AddCourse = ({closeForm, addCourse}) => {\r\n    const [title, setTitle] = useState()\r\n    const [description, setDescription] = useState()\r\n    const [url, setUrl] = useState()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        addCourse(title, description, (!!url) ? url : '#')\r\n        closeForm()\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-box\">\r\n                <form className=\"link-form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-header\">\r\n                        <h2 className=\"form-title\">New Course</h2>\r\n                        <FaTimes className=\"close-button\" onClick={closeForm}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course Title</div>\r\n                        <input className=\"form-input\" type=\"text\" required placeholder=\"Course Title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course Description</div>\r\n                        <input className=\"form-input\" type=\"text\" required placeholder=\"Course Description\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-label\">Course URL (Optional)</div>\r\n                        <input className=\"form-input\" type=\"url\" placeholder=\"Course URL\" value={url} onChange={(e) => setUrl(e.target.value)}/>\r\n                    </div>\r\n                    <button className=\"button-fill\">Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCourse\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Alert = ({closeAlert}) => {\r\n    return (\r\n        <div className=\"alert-box\">\r\n            This is a demo, no changes will be saved\r\n            <FaTimes className=\"alert-close\" onClick={closeAlert}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import TableRow from './TableRow'\r\nimport AddCourse from './forms/AddCourse'\r\nimport {useState} from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport Alert from './Alert'\r\n\r\n\r\nconst Table = () => {\r\n    const [courses, setCourses] = useState([])\r\n    const [courseCounter, setCourseCounter] = useState(1)\r\n    const [showAddCourse, setShowAddCourse] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(true)\r\n\r\n    const generateId = () => {\r\n        setCourseCounter(courseCounter+1)\r\n        return courseCounter\r\n    }\r\n\r\n    const addCourse = async (title, description, url) => {\r\n        const newCourse = {id : generateId(), title : title, description : description, url: url}\r\n        setCourses([...courses, newCourse])\r\n        return newCourse\r\n    }\r\n\r\n    const updateCourse = async (newCourse) => {\r\n        setCourses(courses.map((course) => (course.id === newCourse.id) ? newCourse : course))\r\n        return newCourse\r\n    }\r\n\r\n    const deleteCourse = async (id) => {\r\n        setCourses(courses.filter((course) => course.id !== id))\r\n    }\r\n    if (!courses.length) {\r\n        return (\r\n            <>\r\n                <div className=\"button-container\">\r\n                    <button className=\"button-fill course-add\" title=\"New Course\" onClick={() => setShowAddCourse(true)}>\r\n                        <FaPlus className=\"course-add-icon\" />\r\n                        Add a Course\r\n                    </button>\r\n                    {showAddCourse && <AddCourse closeForm={() => setShowAddCourse(false)} addCourse={addCourse} />}\r\n                </div>\r\n                {showAlert && <Alert closeAlert={() => setShowAlert(false)} />}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-wrapper\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr className=\"table-header\">\r\n                        <th>Courses</th>\r\n                        <th>Material Links</th>\r\n                        <th>Assignment Links</th>\r\n                        <th>\r\n                            <div className=\"table-task\">\r\n                                <span>Tasks</span>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"table-body\">\r\n                    {courses.map((course) => (\r\n                        <TableRow\r\n                            key={course.id} \r\n                            course={course}\r\n                            deleteCourse={deleteCourse}\r\n                            updateCourse={updateCourse}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <FaPlus className=\"course-add-button\" title=\"New Course\" onClick={() => setShowAddCourse(true)}/>\r\n            {showAddCourse && <AddCourse closeForm={() => setShowAddCourse(false)} addCourse={addCourse}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export default __webpack_public_path__ + \"static/media/jadwalsms4.b130876d.png\";","import {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport Table from './components/Table'\r\nimport Schedule from './components/Schedule';\r\nimport Alert from './components/Alert';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar/>\r\n      <Table/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}